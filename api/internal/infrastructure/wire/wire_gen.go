// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"primedivident/internal/config"
	"primedivident/internal/infrastructure/http"
	"primedivident/internal/infrastructure/http/handlers"
	query2 "primedivident/internal/modules/instrument/interactor/query"
	repository2 "primedivident/internal/modules/instrument/repository"
	"primedivident/internal/modules/portfolio/interactor/command"
	"primedivident/internal/modules/portfolio/interactor/query"
	"primedivident/internal/modules/portfolio/repository"
	"primedivident/internal/ports/http/instrument"
	"primedivident/internal/ports/http/portfolio"
	"primedivident/internal/services/email"
	"primedivident/pkg/validator"
)

// Injectors from wire.go:

func Initialize(cfg config.Config) http.Server {
	validatorValidator := validator.GetValidator()
	postgres := ProvidePostgres(cfg)
	repositoryRepository := repository.NewRepository(postgres)
	portfolioById := query.NewPortfolioById(repositoryRepository)
	logger := ProvideLogger(cfg)
	sender := ProvideMailerObserver(cfg, logger)
	firstTestSend := email.NewFirstTestSend(cfg, sender)
	portfolioCreate := command.NewPortfolioCreate(firstTestSend, repositoryRepository)
	serverInterface := portfolio.NewHandler(validatorValidator, portfolioById, portfolioCreate)
	repository3 := repository2.NewRepository(postgres)
	instrumentAll := query2.NewInstrumentAll(repository3)
	instrumentServerInterface := instrument.NewHandler(logger, instrumentAll)
	httpHandlers := handlers.NewHandlers(serverInterface, instrumentServerInterface)
	server := http.NewServer(httpHandlers)
	return server
}
